<script lang="ts">
  import { onMount } from "svelte";
  import Item from './Item/Item.svelte';
  import CandidatesComponent from './Candidates/Candidates.svelte';

  import { candidates } from '../store/candidates';

  let show = false;
  let foods: any = [
    { k: 1, v: "자장면" },
    { k: 2, v: "돈가스" },
    { k: 3, v: "피자" },
    { k: 4, v: "햄버거" },
    { k: 5, v: "스파게티" },
    { k: 6, v: "냉모밀" },
    { k: 7, v: "부대찌게" },
    { k: 8, v: "칼국수" },
    { k: 9, v: "스테이크" },
    { k: 10, v: "초밥" }
  ];
  const initialValue = `오늘의 PICK`;
  let boxRef: HTMLElement;
  const itemHeight: number = document.body.clientHeight;
  let flg: boolean = false;
  // candidates.update(data => data = foods);
  // $candidates = foods.map((item, index) => ({ k: index, v: item }));
  $candidates = foods;

  candidates.subscribe(() => {
    console.log('### subscribe');
    console.log($candidates);
  });

  onMount(() => {
    console.log("### mounted");
  });

  function init() {
    // let rolls = shuffle([ ...foods, ...foods ]);
    let rolls = shuffle([ ...foods ]);

    boxRef.style.transitionDuration = `0s`;
    boxRef.style.transform = `translateY(-${itemHeight * (rolls.length - 1)}px)`;


    // Initialize transition events
    boxRef.addEventListener("transitionstart", function() {
      show = false;

      document.querySelectorAll('.item').forEach((item: HTMLElement) => (item.style.filter = 'blur(1px)'));
      boxRef.removeEventListener("click", roll);
    }, {
      once: true
    });
    boxRef.addEventListener("transitionend", function() {
      document.querySelectorAll('.item').forEach((item: HTMLElement) => (item.style.filter = 'blur(0)'));
      boxRef.addEventListener("click", roll);

      setTimeout(() => {
        show = true;
      }, 300);
    }, {
      once: true
    });
  }

  function shuffle([...arr]) {
    let m: number = arr.length;
    while (m) {
      const i: number = Math.floor(Math.random() * m--);
      [arr[m], arr[i]] = [arr[i], arr[m]];
    }
    return arr;
  }

  function roll() {
    init();

    flg = true;

    setTimeout(function() {
      boxRef.style.transitionDuration = `3s`;
      boxRef.style.transform = `translateY(0)`;
    }, 100);
  }

  function addItem(event) {
    event.stopPropagation();
    console.log("### test");
    // foods.push("test");
    console.log(foods);
    foods = [ ...foods, 'test111' ]
    candidates.set([ ...$candidates, '### TEST ###' ]);
    // candidates.update(data => candidates.push('### TEST ###'))
  }

  function delItem(val) {
    foods = foods.filter(item => item !== val);
  }
</script>

<div class="app">
  <div class="container">
    <div class="box" tabindex="0" role="button" bind:this={boxRef} on:click={roll} on:keypress={roll} aria-label="click">
      <CandidatesComponent addItem={addItem} delItem={delItem}/>

      {#if !flg}
        <Item food={initialValue} show={show} />
      {:else}
        {#each $candidates as item}
          <Item food={item.v} show={show} />
        {/each}
      {/if}
    </div>
  </div>
</div>

<style>
.app {
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.container {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.box {
  width: 100%;
  height: 100%;
  position: relative;
  top: 0;
  list-style: none;
  padding: 0;
  margin: 0;
  transition: transform 1s ease-in-out;
}
</style>