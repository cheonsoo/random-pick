<div>
<Set chips={keyed} let:chip key={(chip) => chip.k} input>
  <Chip {chip} shouldFocusPrimaryActionOnClick={false} shouldRemoveOnTrailingIconClick={false} on:click={event => event.stopPropagation()}>
    <Text>{chip.v}</Text>
    <TrailingAction on:click={(event) => delChip(event, chip)} icon$class="material-icons">cancel</TrailingAction>
  </Chip>
</Set>
<button class='add-btn' on:click={event => addKeyedChip(event)}></button>
<!-- <Button on:click={event => addKeyedChip(event)}><div class='add-btn'></div></Button> -->
</div>

<Dialog />

<script lang="ts">
  import Chip, { Set, TrailingAction, Text } from '@smui/chips';
  import Button, { Label } from '@smui/button';
  import Dialog from './Dialog.svelte';

  import { candidates } from '../../store/candidates';
  import { openAddItemFlg } from '../../store/modal';

  export let keyed:any = [];

  // let open = false;

  function addKeyedChip(event: any) {
    event.stopPropagation();

    $openAddItemFlg = true;

    // open = true;
    // $candidates = [ ...$candidates, { k: $candidates.length, v: '### TEST ###' } ];
  }

  function delChip(event: any, val: any) {
    event.stopPropagation();
    $candidates = $candidates.filter(item => item.k !== val.k);
  }
</script>

<style>
.add-btn {
  clip-path: polygon(0 33%, 35% 33%, 35% 0%, 66% 0, 66% 33%, 100% 33%, 100% 66%, 66% 66%, 66% 100%, 35% 100%, 35% 66%, 0 66%);
  width: 30px;
  height: 35px;
  z-index: 11111;
  display: block;
  /* position: absolute; */
  /* top: 0;
  left: 0; */
  background-color: #fff;
}
</style>